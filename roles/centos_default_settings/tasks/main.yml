---
# tasks file for centos_default_settings
- name:          Add epel repo
  yum:
    name:        epel-release
    state:       installed

- name:          Install remi repo.
  yum:
    name:        http://rpms.remirepo.net/enterprise/remi-release-7.rpm
    state:       present

- name:          Import remi GPG key.
  rpm_key:
    key:         http://rpms.remirepo.net/RPM-GPG-KEY-remi
    state:       present

- name:          Installs default packages
  yum:
    name:        "{{ packages }}"

- name:          Disable Selinux
  selinux:
    state: disabled

- name:          Stop and disable firewalld
  systemd:
    name:        firewalld
    state:       stopped
    enabled:     no

- name:          Delete firewalldD1.service
  file:
    path:        /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service
    state:       absent

- name:          Delete firewalld.service
  file:
    path:        /etc/systemd/system/basic.target.wants/firewalld.service
    state:       absent

- name:          Installs iptables
  yum:
    name:        iptables-services
    state:       latest

- name:          Enabled iptables
  service:
    name:        iptables
    state:       started
    enabled:     yes

- name:          Create and edit iptables.sh
  blockinfile:
    path:        /etc/iptables.sh
    create:      yes
    block:       |
       #!/bin/bash
       #
       # Объявление переменных
       export IPT="iptables"

       # Интерфейс который смотрит в интернет
       export WAN=eth0
       export WAN_IP="{{ ansible_host }}"

       # Очистка всех цепочек iptables
       $IPT -F
       $IPT -F -t nat
       $IPT -F -t mangle
       $IPT -X
       $IPT -t nat -X
       $IPT -t mangle -X

       # Установим политики по умолчанию для трафика, не соответствующего ни одному из правил
       $IPT -P INPUT DROP
       $IPT -P OUTPUT DROP
       $IPT -P FORWARD DROP

       # разрешаем локальный траффик для loopback
       $IPT -A INPUT -i lo -j ACCEPT
       $IPT -A OUTPUT -o lo -j ACCEPT

       # Разрешаем исходящие соединения самого сервера
       $IPT -A OUTPUT -o $WAN -j ACCEPT

       # Состояние ESTABLISHED говорит о том, что это не первый пакет в соединении.
       # Пропускать все уже инициированные соединения, а также дочерние от них
       $IPT -A INPUT -p all -m state --state ESTABLISHED,RELATED -j ACCEPT
       # Пропускать новые, а так же уже инициированные и их дочерние соединения
       $IPT -A OUTPUT -p all -m state --state ESTABLISHED,RELATED -j ACCEPT

       # Разрешить форвардинг для уже инициированных и их дочерних соединений
       $IPT -A FORWARD -p all -m state --state ESTABLISHED,RELATED -j ACCEPT

       # Включаем фрагментацию пакетов. Необходимо из за разных значений MTU
       $IPT -I FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu

       # Отбрасывать все пакеты, которые не могут быть идентифицированы
       # и поэтому не могут иметь определенного статуса.
       $IPT -A INPUT -m state --state INVALID -j DROP
       $IPT -A FORWARD -m state --state INVALID -j DROP

       # Приводит к связыванию системных ресурсов, так что реальный
       # обмен данными становится не возможным, обрубаем
       $IPT -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
       $IPT -A OUTPUT -p tcp ! --syn -m state --state NEW -j DROP

       # Рзрешаем пинги
       $IPT -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
       $IPT -A INPUT -p icmp --icmp-type destination-unreachable -j ACCEPT
       $IPT -A INPUT -p icmp --icmp-type time-exceeded -j ACCEPT
       $IPT -A INPUT -p icmp --icmp-type echo-request -j ACCEPT

       # Открываем порт для ssh
       $IPT -A INPUT -i $WAN -p tcp --dport 22 -j ACCEPT
       # Открываем порт для http
       $IPT -A INPUT -i $WAN -p tcp --dport 80 -j ACCEPT
       # Открываем порт для https
       $IPT -A INPUT -i $WAN -p tcp --dport 443 -j ACCEPT

       # Логирование
       # Все что не разрешено, но ломится отправим в цепочку undef

       $IPT -N undef_in
       $IPT -N undef_out
       $IPT -N undef_fw
       $IPT -A INPUT -j undef_in
       $IPT -A OUTPUT -j undef_out
       $IPT -A FORWARD -j undef_fw

       # Логируем все из undef

       $IPT -A undef_in -j LOG --log-level info --log-prefix "-- IN -- DROP "
       $IPT -A undef_in -j DROP
       $IPT -A undef_out -j LOG --log-level info --log-prefix "-- OUT -- DROP "
       $IPT -A undef_out -j DROP
       $IPT -A undef_fw -j LOG --log-level info --log-prefix "-- FW -- DROP "
       $IPT -A undef_fw -j DROP

       # Записываем правила
       /sbin/iptables-save  > /etc/sysconfig/iptables
    mode:        '0740'

- name:          Run iptables script
  shell:       /etc/iptables.sh
  args:
    chdir: /etc/
    executable: "/bin/bash"
  changed_when:  True

- name:          Create session slice file
  blockinfile:
    path:        /etc/rsyslog.d/ignore-systemd-session-slice.conf
    create:      yes
    block:       |
       if $programname == "systemd" and (
         $msg contains "Starting Session";
         $msg contains "Started Session";
         $msg contains "Created slice";
         $msg contains "Starting user-";
         $msg contains "Starting User Slice of";
         $msg contains "Removed session";
         $msg contains "Removed slice User Slice of"
         $msg contains "Stopping User Slice of"
       ) then stop
  notify: Restart rsyslog

